(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{382:function(v,_,t){"use strict";t.r(_);var e=t(45),o=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"思路"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#思路"}},[v._v("#")]),v._v(" 思路")]),v._v(" "),t("ol",[t("li",[v._v("使用 while 循环将输入解析为一个个 token (单词)，对于不同的 token，进行不同的处理")])]),v._v(" "),t("p",[v._v("(注意: 输入可能包含非 ASCII 编码的字符，需要考虑在内)")]),v._v(" "),t("ul",[t("li",[t("p",[v._v('token 为"标识符" (当 token 为"标识符"时，需要进行额外判断，因为该"标识符"可能是 ECMAScript 的关键字或保留字，代表完全不同的含义)')]),v._v(" "),t("ul",[t("li",[t("p",[v._v("token 为关键字或保留字，对不同关键字进行不同处理 (比如 token 为 "),t("code",[v._v("if")]),v._v(" 就当作 "),t("code",[v._v("if")]),v._v(" 语句处理)")])]),v._v(" "),t("li",[t("p",[v._v("token 为标识符，返回")])])])]),v._v(" "),t("li",[t("p",[v._v("token 为数字，返回 (数字中可能包含 "),t("code",[v._v("+ - .")]),v._v(")")])]),v._v(" "),t("li",[t("p",[v._v("token 为字符串，返回 (JavaScript 字符串是由单引号或双引号括起来的字符序列)")])]),v._v(" "),t("li",[t("p",[v._v("token 为正则表达式")])]),v._v(" "),t("li",[t("p",[v._v("token 为"),t("code",[v._v("[ ] { } ( ) , ; : . ? => ...")]),v._v(" 等一系列标点符号，它们中一部分是运算符")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("token 为运算符，运算符可以用于算术、赋值等表达式中，运算符的执行顺序依照运算符的优先级，JavaScript 运算符有 "),t("code",[v._v("++ -- - + ~ | delete typeof void * / % + - + << >> >>> < <= > >= instanceof in == != === !== & ^ | && || ?: = *= /= %= += -= &= ^= |= <<= >>= >>>= ,")])])]),v._v(" "),t("li",[t("p",[v._v("token 为注释 "),t("code",[v._v("// /**/")]),v._v("，解析时需要忽略注释信息")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("[ ] { } ( ) ;")])])])])]),v._v(" "),t("li",[t("p",[v._v("其他，返回错误信息")])])]),v._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[v._v("token 为关键字")])]),v._v(" "),t("p",[v._v("以 var 为例")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("多变量声明，用 "),t("code",[v._v(",")]),v._v(" 隔开")])]),v._v(" "),t("li",[t("p",[v._v("变量赋值，"),t("code",[v._v("=")]),v._v(" 右侧为表达式")])])])])}),[],!1,null,null,null);_.default=o.exports}}]);